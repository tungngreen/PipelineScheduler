syntax = "proto3";
import "google/protobuf/empty.proto";

option java_multiple_files = true;
option objc_class_prefix = "HLW";

package indevicecommunication;

service InDeviceCommunication {
  rpc ReportMsvcStart(ProcessData) returns (ProcessData) {}
  rpc KeepAlive(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc UpdateSender(Connection) returns (google.protobuf.Empty) {}
  rpc UpdateBatchSize(Int32) returns (google.protobuf.Empty) {}
  rpc UpdateResolution(Dimensions) returns (google.protobuf.Empty) {}
  rpc UpdateTimeKeeping(TimeKeeping) returns (google.protobuf.Empty) {}
  rpc SyncDatasources(Int32) returns (google.protobuf.Empty) {}
  rpc SetStartFrame(Int32) returns (google.protobuf.Empty) {}
  rpc StartFederatedLearning(FlData) returns (google.protobuf.Empty) {}
  rpc FederatedLearningReturn(FlData) returns (google.protobuf.Empty) {}
  rpc StopExecution(ContainerSignal) returns (google.protobuf.Empty) {}
}

message ContainerSignal {
  string name = 1;
  bool forced = 2;
}

message Connection {
  int32 mode = 1;
  string name = 2;
  string ip = 3;
  int32 port = 4;
}

message TimeKeeping {
  string name = 1;
  int32 slo = 2;
  uint64 time_budget = 4;
  uint64 start_time = 5;
  uint64 end_time = 6;
  uint64 local_duty_cycle = 7;
  uint64 cycle_start_time = 8;
}

message Dimensions {
  int32 channels = 1;
  int32 height = 2;
  int32 width = 3;
}

message ProcessData {
  string msvc_name = 1;
  uint32 pid = 2;
}

message Int32 {
  int32 value = 1;
}

message FlData {
  bytes params = 1;
  optional bytes states = 2;
  optional bytes values = 3;
  optional bytes resolution_actions = 4;
  optional bytes batching_actions = 5;
  optional bytes scaling_actions = 6;
  optional bytes rewards = 7;
  optional bytes log_probs = 8;
}